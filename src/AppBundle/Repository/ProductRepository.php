<?php
/**
 * Created by PhpStorm.
 * User: Nidhal
 * Date: 19/03/2018
 * Time: 23:03
 */

namespace App\PIBundle\Repository;

/**
 * SujetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProprieteRepository extends \Doctrine\ORM\EntityRepository
{
    public function findprop($p,$local)
    {

        $query=$this->getEntityManager()->createQuery(
            "select h from AppPIBundle:Propriete h WHERE ( h.titre LIKE :nbp OR h.slogan LIKE :nbp
            OR h.description LIKE :nbp ) AND h.adresse LIKE :l
             "
        )->setParameter('nbp','%'.$p.'%')->setParameter('l','%'.$local.'%');
        return $query->getResult();

    }

    public function findprop2($p)
    {

        $query=$this->getEntityManager()->createQuery(
            "select h from AppPIBundle:Propriete h WHERE h.titre LIKE :nbp OR h.slogan LIKE :nbp
            OR h.description LIKE :nbp OR h.adresse LIKE :nbp
             "
        )->setParameter('nbp','%'.$p.'%');
        return $query->getResult();

    }

    public function findpropbycateg($p)
    {

        $query=$this->getEntityManager()->createQuery(
            "select p from AppPIBundle:Categori c JOIN AppPIBundle:Propriete p WITH c.idProp=p  WHERE  c.nom LIKE :l "
        )->setParameter('l','%'.$p.'%');
        return $query->getResult();

    }


    public function getevent($p)
    {

        $query=$this->getEntityManager()->createQuery(
            "select p from AppPIBundle:Reservation p WHERE  p.checked = FALSE and p.idProp = :l "
        )->setParameter('l',$p);
        return $query->getResult();

    }

    public function getevent2($p)
    {

        $query=$this->getEntityManager()->createQuery(
            "select p from AppPIBundle:Reservation p WHERE  p.idProp = :l "
        )->setParameter('l',$p);
        return $query->getResult();

    }
        public function findequi($p)
    {

        $query=$this->getEntityManager()->createQuery(
            "select p from AppPIBundle:Equipement c JOIN AppPIBundle:Propriete p WITH c.idProp=p  WHERE  c.nom LIKE :l "
        )->setParameter('l','%'.$p.'%');
        return $query->getResult();

    }

    public function cal($p)
    {

        $query=$this->getEntityManager()->createQuery(
            "select c from AppPIBundle:Reservation c WHERE  c.idProp = :l AND  c.checked = TRUE and c.valid = TRUE "
        )->setParameter('l',$p);
        return $query->getResult();

    }

    public function cal2()
    {

        $query=$this->getEntityManager()->createQuery(
            "select c from AppPIBundle:Reservation c "
        );
        return $query->getResult();

    }

    public function nbu()
    {

        $query=$this->getEntityManager()->createQuery(
            "select COUNT (c) as x from AppPIBundle:User c"
        );
        return $query->getResult();

    }

    public function lk($p ,$l)
    {

        $query=$this->getEntityManager()->createQuery(
            "select c from AppPIBundle:Proplikes c WHERE  c.idProp = :p AND  c.idUser = :u "
        )->setParameter('p',$p)->setParameter('u',$l);
        return $query->getResult();

    }


    public function nbl($p)
    {

        $query=$this->getEntityManager()->createQuery(
            "select COUNT (c) as x  from AppPIBundle:Proplikes c WHERE  c.idProp = :p  "
        )->setParameter('p',$p);
        return $query->getResult();

    }

    public function nblu($p,$u)
    {

        $query=$this->getEntityManager()->createQuery(
            "select COUNT (c) as x  from AppPIBundle:Proplikes c WHERE  c.idProp = :p AND  c.idUser = :u "
        )->setParameter('p',$p)->setParameter('u',$u);
        return $query->getResult();

    }

    public function nblu2($p,$u)
    {

        $query=$this->getEntityManager()->createQuery(
            "select c  from AppPIBundle:Proplikes c WHERE  c.idProp = :p AND  c.idUser = :u "
        )->setParameter('p',$p)->setParameter('u',$u);
        return $query->getResult();

    }

    public function confres($p,$u)
    {

        $query=$this->getEntityManager()->createQuery(
            "select c  from AppPIBundle:Reservation c WHERE  c.idProp = :p AND  c.idUser = :u AND c.checked = TRUE  ORDER BY c.id DESC "
        )->setParameter('p',$p)->setParameter('u',$u);
        return $query->getResult();

    }

    public function nbconfres($p,$u)
    {

        $query=$this->getEntityManager()->createQuery(
            "select COUNT (c) as x  from AppPIBundle:Reservation c WHERE  c.idProp = :p AND  c.idUser = :u "
        )->setParameter('p',$p)->setParameter('u',$u);
        return $query->getResult();

    }




}
